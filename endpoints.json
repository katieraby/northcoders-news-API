{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [
        { "slug": "football", "description": "Footie!" },
        { "slug": "coding", "description": "All things code" }
      ]
    }
  },
  "POST /api/topics": {
    "description": "Accepts an object with topic slug and description keys, and returns the posted topic",
    "queries": [],
    "exampleResponse": {
      "topic": {
        "slug": "Magic",
        "description": "Wizards galore!"
      }
    }
  },
  "GET /api/users/:username": {
    "description": "Serves an object containing details about the user",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "exampleusername",
        "avatar_url": "http://avatarurlhere.com/avatar.jpg",
        "name": "Name Of The User"
      }
    }
  },
  "GET /api/articles": {
    "description": "Serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order", "limit", "p"],
    "exampleResponse": {
      "articles": [
        {
          "article_id": 4378942,
          "votes": 50,
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z"
        }
      ]
    }
  },
  "POST - /api/articles": {
    "description": "Takes an object with the keys of username, title, topic and body, and returns the posted article",
    "queries": [],
    "exampleInput": {
      "username": "rogersop",
      "title": "How to make a POST request 101",
      "topic": "monsters",
      "body": "Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request."
    },
    "exampleResponse": {
      "articles": [
        {
          "article_id": 543543,
          "votes": 0,
          "title": "How to make a POST request 101",
          "topic": "monsters",
          "author": "rogersop",
          "body": "Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request. Here is the body of the article in which we are making a post request.",
          "created_at": "2018-05-30T15:59:13.341Z"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "Serves an article object containing the article by id specified",
    "queries": [],
    "exampleResponse": {
      "article": {
        "author": "exampleusernamehere",
        "title": "How to train your dragon: a step-by-step article",
        "article_id": 1323,
        "body": "Text from the article..",
        "topic": "coding",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 25,
        "comment_count": 2
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "Accepts an object in the form { inc_votes: newVote }, which will indicate how much the votes property should be updated by. Responds with the updated article",
    "exampleInput": { "inc_votes": 2 },
    "queries": [],
    "exampleResponse": {
      "article": {
        "author": "exampleusernamehere",
        "title": "How to train your dragon: a step-by-step article",
        "article_id": 1323,
        "body": "Text from the article..",
        "topic": "coding",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 27,
        "comment_count": 2
      }
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "Serves a status 204 and no content when sending a delete request for a specified article by id",
    "queries": [],
    "exampleResponse": "Status 204"
  },
  "GET /api/articles/:article_id/comments": {
    "description": "Serves an array of comments for the given article id",
    "queries": ["limit", "p"],
    "exampleResponse": {
      "comments": {
        "comment_id": 43,
        "votes": 75,
        "created_at": "2018-05-30T15:59:13.341Z",
        "author": "exampleusernamehere",
        "body": "commentbody text here"
      }
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "Accepts an object with username and body properties, and returns with the posted comment",
    "exampleInput": {
      "username": "exampleusernamehere",
      "body": "commentbody text here"
    },
    "queries": [],
    "exampleResponse": {
      "comment": {
        "comment_id": 789,
        "votes": 0,
        "created_at": "2018-05-30T15:59:13.341Z",
        "author": "exampleusernamehere",
        "body": "commentbody text here"
      }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "Accepts an object in the form { inc_votes: newVote }, which will indicate how much the votes property should be updated by. Responds with the updated comment",
    "exampleInput": { "inc_votes": 8 },
    "queries": [],
    "exampleResponse": {
      "comment": {
        "comment_id": 797,
        "votes": 0,
        "created_at": "2018-05-30T15:59:13.341Z",
        "author": "exampleusernamehere",
        "body": "commentbody text here"
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "Serves a status 204 and no content when sending a delete request for a specified comment by id",
    "queries": [],
    "exampleResponse": "Status 204. Comment successfully deleted"
  }
}
